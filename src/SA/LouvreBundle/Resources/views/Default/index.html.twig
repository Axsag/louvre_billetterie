{% extends "SALouvreBundle::layout.html.twig" %}


    {% block body %}
        {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
        
        	{# Les erreurs générales du formulaire. #}
  			{{ form_errors(form) }}
  			
  			{# Génération manuelle et éclatée : #}
  			
  			<div class="form-group">
    			{# Génération du label. #}
    			{{ form_label(form.visiteDate, "Date de la visite", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
  			<!--</div>
  			<div class="col-sm-10">-->
  				{{ form_errors(form.visiteDate) }} 
      			{# Génération de l'input. #}
      			{{ form_widget(form.visiteDate, {'attr': {'class': 'form-control'}}) }}
    		</div>
  			
  			
  			<div class="form-group">
    			{# Génération du label. #}
    			{{ form_label(form.typeOrder, "Type de billet", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
  			<!--</div>
  			<div class="col-sm-10">-->
      			{# Génération de l'input. #}
      			{{ form_widget(form.typeOrder, {'attr': {'class': 'form-control'}}) }}
    		</div>
  			
  			
  			<div class="form-group">
    	        <label class="col-sm-2 control-label control-label required" for="sa_louvrebundle_orders_NbTickets">Quantité de billets</label>
  			<!--</div>
  			<div class="col-sm-10">-->
      			<input type="text" id="sa_louvrebundle_orders_NbTickets" name="sa_louvrebundle_orders[NbTickets]" required="required" class="form-control form-control">
    		</div>
  			
  			
  			
  			  			
  			<div class="form-group">
    			<!--{# Génération du label. #}
    			{{ form_label(form.tickets, "Tickets", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
  			</div>
  			<div class="col-sm-10">-->
      			{# Génération de l'input. #}
      			{{ form_widget(form.tickets, {'attr': {'class': 'form-control'}}) }}
    		</div>
    		
  			
  			{# Génération automatique des champs pas encore écrits.
     		Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
     		et tous les champs cachés (type « hidden »). #}
  			{{ form_rest(form) }}
			
			
			
  		{# Fermeture de la balise <form> du formulaire HTML #}
  		{{ form_end(form) }}
    {% endblock %}
    
    {% block stripe %}
        
        <form action="/charge" method="post" id="payment-form">
  			<div class="form-row">
    			<label for="card-element">
      				Credit or debit card
    			</label>
    			<div id="card-element">
      				<!-- A Stripe Element will be inserted here. -->
    			</div>

    			<!-- Used to display Element errors. -->
    			<div id="card-errors" role="alert"></div>
  		</div>

  		<button class="btn-default ">Submit Payment</button>
		</form>
        
        <script src="https://js.stripe.com/v3/"></script>
        
        <script>
        	var stripe = Stripe('pk_test_vCOt2UBTn3CGvrYqwDxmkyre');
        	var elements = stripe.elements();
        	
        	// Custom styling can be passed to options when creating an Element.
        	var style = {
        	  base: {
        	    // Add your base input styles here. For example:
        	    fontSize: '16px',
        	    color: "#32325d",
        	  }
        	};

        	// Create an instance of the card Element.
        	var card = elements.create('card', {style: style});

        	// Add an instance of the card Element into the `card-element` <div>.
        	card.mount('#card-element');
        	
        	card.addEventListener('change', function(event) {
        		  var displayError = document.getElementById('card-errors');
        		  if (event.error) {
        		    displayError.textContent = event.error.message;
        		  } else {
        		    displayError.textContent = '';
        		  }
        		});
        	
        	// Create a token or display an error when the form is submitted.
        	var form = document.getElementById('payment-form');
        	form.addEventListener('submit', function(event) {
        	  event.preventDefault();

        	  stripe.createToken(card).then(function(result) {
        	    if (result.error) {
        	      // Inform the customer that there was an error.
        	      var errorElement = document.getElementById('card-errors');
        	      errorElement.textContent = result.error.message;
        	    } else {
        	      // Send the token to your server.
        	      stripeTokenHandler(result.token);
        	    }
        	  });
        	});
        	
        	function stripeTokenHandler(token) {
        		  // Insert the token ID into the form so it gets submitted to the server
        		  var form = document.getElementById('payment-form');
        		  var hiddenInput = document.createElement('input');
        		  hiddenInput.setAttribute('type', 'hidden');
        		  hiddenInput.setAttribute('name', 'stripeToken');
        		  hiddenInput.setAttribute('value', token.id);
        		  form.appendChild(hiddenInput);

        		  // Submit the form
        		  form.submit();
        		}
        </script>
        
        
        
       
    {% endblock %}
